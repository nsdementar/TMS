---
- name: "Copy a curl package"
  become: true
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  with_items:
    - "{{ curl_files }}"
    
- name: "Install a .deb package"
  become: true
  ansible.builtin.apt:
    deb: "{{ item.dest }}"
    state: present
    update_cache: yes
    force: yes
  with_items:
    - "{{ curl_files }}"
  when: ansible_os_family == "Debian"
    
- name: "Install a .rpm package"
  become: true
  ansible.builtin.yum:
    name: "{{ item.dest }}"
    state: present
    update_cache: yes
  with_items:
    - "{{ curl_files }}"
  when: ansible_os_family == "RedHat"

- name: "Create a file /HW20_FILE_INFO with content of a variable"
  become: true
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  with_items:
    - "{{ template_var }}"

- name : "Create a files systemd log"
  become: true
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    mode: "{{ item.mode }}"
  with_items:
    - "{{ deamon_templates }}"

- name: "Start logger"
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  become: yes
  become_user: root
  loop:
    - hw21.timer
    - hw21.service

- name: "Optional compress logrotate"
  set_fact: compress="{{ compress_var }}"
  when: compress_var is defined

- name: "Touch file hosts_list.txt"
  ansible.builtin.file:
    path: "{{ local_path }}"
    state: touch
  
- name: "Date hosts_list.txt"
  lineinfile:
    path: "{{ local_path }}"
    line: "{{ ansible_date_time.date }}"
    create: yes
  delegate_to: localhost

- name: "Hostname hosts_list.txt"
  lineinfile:
    path: "{{ local_path }}"
    line: "{{ ansible_default_ipv4.address }}"
    create: yes
  delegate_to: localhost

- name: "Touch file hosts_ip.txt"
  ansible.builtin.file:
    path: "{{ hosts_ip }}"
    state: touch

- name: "Copy files hosts_ip.txt"
  copy:
    src: "{{ hosts_ip }}"
    dest: "{{ copy_path }}"
    remote_src: true
  become: true
